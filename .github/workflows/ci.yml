on: [push, pull_request]

name: CI
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # make sure all code has been formatted with rustfmt
      - run: rustup component add rustfmt
      - name: check rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check --color always

      # run clippy to verify we have no warnings
      - run: rustup component add clippy
      - name: cargo fetch
        uses: actions-rs/cargo@v1
        with:
          command: fetch
      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --tests -- -D warnings

  test:
    name: Test
    strategy:
      matrix:
        name: [windows, linux]

        include:
          - name: linux
            os: ubuntu-latest
            artifact_name: rdm4-bin
            asset_name: rdm4-bin-linux-amd64
          - name: windows
            os: windows-latest
            artifact_name: rdm4-bin.exe
            asset_name: rdm4-bin-windows-amd64
    runs-on: ${{ matrix.os }}  
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: get glTF Validator (Linux)
        if: runner.os == 'Linux'
        run: curl -L https://github.com/KhronosGroup/glTF-Validator/releases/download/2.0.0-dev.3.3/gltf_validator-2.0.0-dev.3.3-linux64.tar.xz | tar xvfJ -
      - name: get glTF Validator (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: curl -L https://github.com/KhronosGroup/glTF-Validator/releases/download/2.0.0-dev.3.3/gltf_validator-2.0.0-dev.3.3-win64.zip > vali.zip && tar xvfJ vali.zip
      - name: get texconv (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          curl.exe -O -L https://github.com/microsoft/DirectXTex/releases/download/apr2021/texconv.exe
          pwd | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: cargo fetch
        uses: actions-rs/cargo@v1
        with:
          command: fetch
          args: --locked
      - name: cargo test build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --tests --release --workspace --locked
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --workspace --locked
      - name: cargo build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --workspace --locked
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.asset_name }}
          path: target/release/${{ matrix.artifact_name }}
